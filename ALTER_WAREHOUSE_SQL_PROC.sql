USE ROLE ACCOUNTADMIN;
DROP PROCEDURE IF EXISTS PLATFORM_DB.PROVISION_ROUTINE.ALTER_WAREHOUSE_SQL_PROC(VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR);


USE ROLE SYSADMIN;
                             
CREATE or REPLACE PROCEDURE PLATFORM_DB.PROVISION_ROUTINE.ALTER_WAREHOUSE_SQL_PROC (
                                                   WH_NAME VARCHAR(200),    //1
                                                   WH_COMMENT VARCHAR(100), //2
                                                   WH_TAG VARCHAR(100),     //3
                                                   SIZE VARCHAR(20),        //4
                                                   MAX VARCHAR(20),         //5
                                                   MIN VARCHAR(20),         //6
                                                   SCALING VARCHAR(20) ,    //7
                                                   SUSPENDED VARCHAR(5),    //8
                                                   TIMEOUT VARCHAR(5),       //9
                                                   MONITOR VARCHAR,          //10
                                                   STATEMENT_QUEUED VARCHAR(30),      //11
                                                   TENANT_NAME_PARAMETER VARCHAR(20) //12
 
                                                )

RETURNS ARRAY  NOT NULL
LANGUAGE SQL
EXECUTE AS   OWNER
AS
$$
 DECLARE
   TENANT VARCHAR DEFAULT '';
   JOB_NAME VARCHAR DEFAULT '';
   JOB_ACTION VARCHAR DEFAULT '';
   IS_ERROR VARCHAR DEFAULT '';
   JOB_LOG_DESCRIPTION VARCHAR DEFAULT '';
   WH_EXCEPTION_PARAMETER  EXCEPTION;
   TENANT_EXCEPTION_PARAMETER EXCEPTION;
   WH_ALTER_SQL VARCHAR DEFAULT '';

   LOG VARIANT DEFAULT '';
BEGIN

    IS_ERROR := '0';
    
    TENANT := TENANT_NAME_PARAMETER;


    IF (WH_NAME IS NULL  OR (WH_COMMENT IS NULL AND SIZE IS NULL AND MAX IS NULL AND MIN IS NULL AND SCALING IS NULL AND SUSPENDED IS NULL AND  TIMEOUT IS NULL) ) THEN
            RAISE WH_EXCEPTION_PARAMETER;
    END IF;
    WH_ALTER_SQL :='';
    IF ( NULLIF(TRIM(SIZE ), '') IS NOT NULL) THEN
        WH_ALTER_SQL:= WH_ALTER_SQL || ' WAREHOUSE_SIZE='''||SIZE ||'''' ;
    END IF;

    
    IF ( NULLIF(TRIM(MAX ), '') IS NOT NULL) THEN
        WH_ALTER_SQL:= WH_ALTER_SQL || ' MAX_CLUSTER_COUNT='||MAX  ;
    END IF;
    IF ( NULLIF(TRIM(MIN ), '') IS NOT NULL ) THEN
        WH_ALTER_SQL:= WH_ALTER_SQL || ' MIN_CLUSTER_COUNT='||MIN  ;
    END IF;
    IF (NULLIF(TRIM(SCALING ), '') IS NOT NULL ) THEN
        WH_ALTER_SQL:= WH_ALTER_SQL || ' SCALING_POLICY=''' ||SCALING ||'''' ;
    END IF;
    IF (NULLIF(TRIM(SUSPENDED ), '') IS NOT NULL) THEN
        WH_ALTER_SQL:= WH_ALTER_SQL || ' AUTO_SUSPEND=' ||SUSPENDED  ;
    END IF;
    IF (NULLIF(TRIM(TIMEOUT ), '') IS NOT NULL) THEN
        WH_ALTER_SQL:= WH_ALTER_SQL || ' STATEMENT_TIMEOUT_IN_SECONDS=' ||TIMEOUT  ;
    END IF;
    IF (NULLIF(TRIM(STATEMENT_QUEUED ), '') IS NOT NULL ) THEN
        WH_ALTER_SQL:= WH_ALTER_SQL || ' STATEMENT_QUEUED_TIMEOUT_IN_SECONDS=' ||STATEMENT_QUEUED  ;
    END IF;
    IF (NULLIF(TRIM(WH_COMMENT ), '') IS NOT NULL) THEN
        WH_ALTER_SQL:= WH_ALTER_SQL || ' COMMENT=''' ||WH_COMMENT ||'''' ;
    END IF;

    IF (NULLIF(TRIM(MONITOR ), '') IS NOT NULL) THEN
        WH_ALTER_SQL:= WH_ALTER_SQL || ' RESOURCE_MONITOR=''' ||MONITOR ||'''' ;
     END IF;

    WH_ALTER_SQL := 'ALTER WAREHOUSE '||WH_NAME || ' SET '||WH_ALTER_SQL;

    EXECUTE IMMEDIATE WH_ALTER_SQL;
    
    JOB_LOG_DESCRIPTION := ' -- WAREHOUSE ALTERED: ' || WH_NAME || ' ALTER SQL: \n' || WH_ALTER_SQL;
    RETURN ARRAY_CONSTRUCT(:IS_ERROR,:JOB_LOG_DESCRIPTION)  ;

EXCEPTION

  
  WHEN WH_EXCEPTION_PARAMETER  THEN
      IS_ERROR := '1';
      JOB_LOG_DESCRIPTION := 'ERROR: INVALID WAREHOUSE PARAMETERS ' || WH_NAME ;
      RETURN ARRAY_CONSTRUCT(:IS_ERROR,:JOB_LOG_DESCRIPTION)  ;

  WHEN TENANT_EXCEPTION_PARAMETER  THEN
      IS_ERROR := '1';
      JOB_LOG_DESCRIPTION := 'ERROR: TENANT NAMING CONVENTION NOT FOLLOWED - ' || WH_NAME ;
      RETURN ARRAY_CONSTRUCT(:IS_ERROR,:JOB_LOG_DESCRIPTION)  ;
  
  WHEN OTHER THEN
    IS_ERROR := '1';
    JOB_LOG_DESCRIPTION := 'SQLCODE:' || SQLCODE || ' SQLERRM:' || SQLERRM || ' SQLSTATE:' ||SQLSTATE;
    RETURN ARRAY_CONSTRUCT(:IS_ERROR,:JOB_LOG_DESCRIPTION)  ;

END;
$$;

GRANT OWNERSHIP ON PROCEDURE PLATFORM_DB.PROVISION_ROUTINE.ALTER_WAREHOUSE_SQL_PROC(VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR) TO ROLE ACCOUNTADMIN;

USE ROLE ACCOUNTADMIN;
GRANT USAGE ON PROCEDURE PLATFORM_DB.PROVISION_ROUTINE.ALTER_WAREHOUSE_SQL_PROC(VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR) TO ROLE SYSADMIN;

/*
GRANT USAGE ON PROCEDURE PLATFORM_DB.PROVISION_ROUTINE.ALTER_WAREHOUSE_SQL_PROC(VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR) TO ROLE {TenantAbbreviation}_SYSADMIN_FR;
CALL  PLATFORM_DB.PROVISION_ROUTINE.ALTER_WAREHOUSE_SQL_PROC( 'MAPS_ADHOC_VWH','COMMENT','SMALL' ,'1' ,'1' ,'STANDARD', '133','600', '_RM','MAPS'  );
*/
