USE ROLE ACCOUNTADMIN;
DROP PROCEDURE IF EXISTS PLATFORM_DB.PROVISION_ROUTINE.CREATE_RESOURCE_MONITOR_SQL_PROC(VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR);
USE ROLE SYSADMIN;
CREATE PROCEDURE IF NOT EXISTS PLATFORM_DB.PROVISION_ROUTINE.CREATE_RESOURCE_MONITOR_SQL_PROC (
    P_RM_NAME VARCHAR
   ,P_USER_COMMENT VARCHAR
   ,P_CREDIT_QUOTA VARCHAR
   ,P_FREQUENCY VARCHAR
   ,P_START_TIMESTAMP VARCHAR
   ,P_TENANT_NAME VARCHAR
   )
RETURNS ARRAY  NOT NULL
LANGUAGE SQL
EXECUTE AS   OWNER
AS
$$
DECLARE
   TENANT VARCHAR DEFAULT '';
   JOB_NAME VARCHAR DEFAULT '';
   JOB_ACTION VARCHAR DEFAULT '';
   IS_ERROR VARCHAR DEFAULT '0';
   JOB_LOG_DESCRIPTION VARCHAR DEFAULT '';
   RM_SQL VARCHAR DEFAULT '';
   RM_EXCEPTION_PARAMETER EXCEPTION;
   LOG VARIANT DEFAULT '';
BEGIN

    IS_ERROR := '0';
    TENANT := P_TENANT_NAME;
    
    IF (NOT ENDSWITH(UPPER(P_RM_NAME),'RM')) THEN
            RAISE RM_EXCEPTION_PARAMETER;
    ELSE
        RM_SQL:= ' CREATE OR REPLACE RESOURCE MONITOR '|| P_RM_NAME  || ' CREDIT_QUOTA = ' || P_CREDIT_QUOTA  || ' FREQUENCY = ' || P_FREQUENCY || ' START_TIMESTAMP = ' ||  P_START_TIMESTAMP || ' TRIGGERS  ON 50 PERCENT DO NOTIFY   ON 75 PERCENT DO NOTIFY  ON 95 PERCENT DO NOTIFY ON 95 PERCENT DO SUSPEND ON 100 PERCENT DO SUSPEND_IMMEDIATE';
        EXECUTE IMMEDIATE RM_SQL;
    END IF;

    JOB_LOG_DESCRIPTION := ' -- USER COMMENT: ' || P_USER_COMMENT  || '-- ' ||' RESOURCE MONITOR CREATED : ' || P_RM_NAME || ' SQL: \n' || RM_SQL || ';';
    RETURN ARRAY_CONSTRUCT(:IS_ERROR,:JOB_LOG_DESCRIPTION)  ;

EXCEPTION
WHEN RM_EXCEPTION_PARAMETER  THEN
    IS_ERROR := '1';
    JOB_LOG_DESCRIPTION := 'ERROR: RM DOES NOT MATCH THE FORMAT ' ||P_RM_NAME ;
    RETURN ARRAY_CONSTRUCT(:IS_ERROR,:JOB_LOG_DESCRIPTION)  ;

WHEN OTHER THEN
    IS_ERROR := '1';
    JOB_LOG_DESCRIPTION := 'SQLCODE:' || SQLCODE || ' SQLERRM:' || SQLERRM || ' SQLSTATE:' ||SQLSTATE;
    RETURN ARRAY_CONSTRUCT(:IS_ERROR,:JOB_LOG_DESCRIPTION)  ;

END;
$$;

GRANT OWNERSHIP ON PROCEDURE PLATFORM_DB.PROVISION_ROUTINE.CREATE_RESOURCE_MONITOR_SQL_PROC(VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR) TO ROLE ACCOUNTADMIN;
USE ROLE ACCOUNTADMIN;
GRANT USAGE ON PROCEDURE PLATFORM_DB.PROVISION_ROUTINE.CREATE_RESOURCE_MONITOR_SQL_PROC(VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR,VARCHAR) TO ROLE SYSADMIN;
