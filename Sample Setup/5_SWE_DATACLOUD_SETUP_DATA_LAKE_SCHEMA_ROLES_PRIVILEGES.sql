ALTER SESSION SET QUERY_TAG= 'TICKET#:RITM001874648,CR#:CHG000926911';

SET V_TENANT_ABBREVIATION = 'SWE_DATACLOUD';
SET V_SCHEMA_OBJECT_TYPE = '-ALL';

SET V_DATABASETYPENAME = 'DATALAKE';
SET V_SCHEMASHORTNAME = '';

--SCHEMATYPENAME will be STAGE-ALL
SET V_TENANT_ID = (SELECT TENANT_ID FROM ACDP_PLATFORM_DB.PLATFORM_APP.TENANT_LIST WHERE TENANT_ABBREVIATION = $V_TENANT_ABBREVIATION);


SELECT $V_DATABASETYPENAME, $V_TENANT_ABBREVIATION, $V_SCHEMA_OBJECT_TYPE, $V_TENANT_ID;

select * from ACDP_PLATFORM_DB.PLATFORM_APP.SCHEMA_TYPE;

INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.SCHEMA_TYPE(DATABASETYPEID,SCHEMATYPENAME, SCHEMASHORTNAME, TENANT_ID)
WITH DATABASETYPE_LIST AS (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DATABASETYPE WHERE DATABASETYPENAME=$V_DATABASETYPENAME
)
SELECT DATABASETYPEID, $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE,$V_SCHEMASHORTNAME, $V_TENANT_ID FROM DATABASETYPE_LIST;

INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.ROLE_MATRIX(DatabaseTypeID,SCHEMA_TYPEID,ROLENAME_TYPE, TENANT_ID )
WITH DatabaseType_list as (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DatabaseType WHERE DATABASETYPENAME=$V_DATABASETYPENAME
),
Schema_Type_list as ( SELECT SCHEMA_TYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.Schema_Type
                     WHERE SchemaTypeName= $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE
                    AND TENANT_ID = $V_TENANT_ID)
SELECT DATABASETYPEID,SCHEMA_TYPEID,'_MAIN_ROLE', $V_TENANT_ID  FROM DatabaseType_list,Schema_Type_list
UNION
SELECT DATABASETYPEID,SCHEMA_TYPEID,'_DML_ROLE', $V_TENANT_ID  FROM DatabaseType_list,Schema_Type_list
UNION
SELECT DATABASETYPEID,SCHEMA_TYPEID,'_READ_ROLE', $V_TENANT_ID  FROM DatabaseType_list,Schema_Type_list;

INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.Privileges_matrix(ROLETYPE_ID,DATABASETYPEID,SCHEMA_TYPEID,PRIVILEGEID, TENANT_ID)
WITH DatabaseType_list as (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DatabaseType WHERE DATABASETYPENAME=$V_DATABASETYPENAME
),
Schema_Type_list as (
SELECT S.SCHEMA_TYPEID,S.DATABASETYPEID FROM  ACDP_PLATFORM_DB.PLATFORM_APP.Schema_Type S INNER JOIN DatabaseType_list D
WHERE SchemaTypeName= $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE AND
 S.DATABASETYPEID=D.DATABASETYPEID AND TENANT_ID = $V_TENANT_ID),
Role_matrix_list as (
SELECT R.* FROM Schema_Type_list S INNER JOIN ACDP_PLATFORM_DB.PLATFORM_APP.ROLE_MATRIX R on R.SCHEMA_TYPEID=S.SCHEMA_TYPEID
and S.DATABASETYPEID=R.DATABASETYPEID and R.ROLENAME_TYPE='_MAIN_ROLE' AND R.TENANT_ID = $V_TENANT_ID)
SELECT R.ROLETYPE_ID,R.DATABASETYPEID,R.SCHEMA_TYPEID,P.PRIVILEGEID, $V_TENANT_ID FROM
Role_matrix_list R, ACDP_PLATFORM_DB.PLATFORM_APP.Privilege_Mapping P where
PRIVILEGE in ('USAGE') and ON_TAG in ('DATABASE','SCHEMA');



--grant create table on schema to main role
INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.Privileges_matrix(ROLETYPE_ID,DATABASETYPEID,SCHEMA_TYPEID,PRIVILEGEID, TENANT_ID)
WITH DatabaseType_list as (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DatabaseType WHERE DATABASETYPENAME = $V_DATABASETYPENAME
),
Schema_Type_list as (
SELECT S.SCHEMA_TYPEID,S.DATABASETYPEID FROM  ACDP_PLATFORM_DB.PLATFORM_APP.Schema_Type S INNER JOIN DatabaseType_list D
WHERE SchemaTypeName= $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE AND
 S.DATABASETYPEID=D.DATABASETYPEID AND TENANT_ID = $V_TENANT_ID),
Role_matrix_list as (
SELECT R.* FROM Schema_Type_list S INNER JOIN ACDP_PLATFORM_DB.PLATFORM_APP.ROLE_MATRIX R on R.SCHEMA_TYPEID=S.SCHEMA_TYPEID
and S.DATABASETYPEID=R.DATABASETYPEID and R.ROLENAME_TYPE='_MAIN_ROLE' AND R.TENANT_ID = $V_TENANT_ID)
SELECT R.ROLETYPE_ID,R.DATABASETYPEID,R.SCHEMA_TYPEID,P.PRIVILEGEID, $V_TENANT_ID FROM
Role_matrix_list R, ACDP_PLATFORM_DB.PLATFORM_APP.Privilege_Mapping P where
PRIVILEGE in ('CREATE FILE FORMAT' 'CREATE STAGE','CREATE EXTERNAL TABLE') and ON_TAG in ('SCHEMA')  ;


--MAIN ROLE - USAGE ON FUNCTIONS, PROCEDURES, SEQUENCE, STATE
INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.Privileges_matrix(ROLETYPE_ID,DATABASETYPEID,SCHEMA_TYPEID,PRIVILEGEID, TENANT_ID)
WITH DatabaseType_list as (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DatabaseType WHERE DATABASETYPENAME = $V_DATABASETYPENAME
),
Schema_Type_list as (
SELECT S.SCHEMA_TYPEID,S.DATABASETYPEID FROM  ACDP_PLATFORM_DB.PLATFORM_APP.Schema_Type S INNER JOIN DatabaseType_list D
WHERE SchemaTypeName= $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE AND
 S.DATABASETYPEID=D.DATABASETYPEID AND TENANT_ID = $V_TENANT_ID),
Role_matrix_list as (
SELECT R.* FROM Schema_Type_list S INNER JOIN ACDP_PLATFORM_DB.PLATFORM_APP.ROLE_MATRIX R on R.SCHEMA_TYPEID=S.SCHEMA_TYPEID
and S.DATABASETYPEID=R.DATABASETYPEID and R.ROLENAME_TYPE='_MAIN_ROLE' AND R.TENANT_ID = $V_TENANT_ID)
SELECT R.ROLETYPE_ID,R.DATABASETYPEID,R.SCHEMA_TYPEID,P.PRIVILEGEID, $V_TENANT_ID FROM
Role_matrix_list R, ACDP_PLATFORM_DB.PLATFORM_APP.Privilege_Mapping P where
PRIVILEGE in ('USAGE') and ON_TAG in ('ALL FILE FORMATS', 'FUTURE FILE FORMATS', 'ALL STAGES','FUTURE STAGES');



INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.Privileges_matrix(ROLETYPE_ID,DATABASETYPEID,SCHEMA_TYPEID,PRIVILEGEID, TENANT_ID)
WITH DatabaseType_list as (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DatabaseType WHERE DATABASETYPENAME = $V_DATABASETYPENAME
),
Schema_Type_list as (
SELECT S.SCHEMA_TYPEID,S.DATABASETYPEID FROM  ACDP_PLATFORM_DB.PLATFORM_APP.Schema_Type S INNER JOIN DatabaseType_list D
WHERE SchemaTypeName= $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE AND
 S.DATABASETYPEID=D.DATABASETYPEID AND TENANT_ID = $V_TENANT_ID),
Role_matrix_list as (
SELECT R.* FROM Schema_Type_list S INNER JOIN ACDP_PLATFORM_DB.PLATFORM_APP.ROLE_MATRIX R on R.SCHEMA_TYPEID=S.SCHEMA_TYPEID
and S.DATABASETYPEID=R.DATABASETYPEID and R.ROLENAME_TYPE='_MAIN_ROLE' AND R.TENANT_ID = $V_TENANT_ID)
SELECT R.ROLETYPE_ID,R.DATABASETYPEID,R.SCHEMA_TYPEID,P.PRIVILEGEID, $V_TENANT_ID FROM
Role_matrix_list R, ACDP_PLATFORM_DB.PLATFORM_APP.Privilege_Mapping P where
PRIVILEGE in ('SELECT') and ON_TAG in ('ALL EXTERNAL TABLES','FUTURE EXTERNAL TABLES');

--OWNERSHIP

INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.Privileges_matrix(ROLETYPE_ID,DATABASETYPEID,SCHEMA_TYPEID,PRIVILEGEID, TENANT_ID)
WITH DatabaseType_list as (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DatabaseType WHERE DATABASETYPENAME = $V_DATABASETYPENAME
),
Schema_Type_list as (
SELECT S.SCHEMA_TYPEID,S.DATABASETYPEID FROM  ACDP_PLATFORM_DB.PLATFORM_APP.Schema_Type S INNER JOIN DatabaseType_list D
WHERE SchemaTypeName= $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE AND
 S.DATABASETYPEID=D.DATABASETYPEID AND TENANT_ID = $V_TENANT_ID),
Role_matrix_list as (
SELECT R.* FROM Schema_Type_list S INNER JOIN ACDP_PLATFORM_DB.PLATFORM_APP.ROLE_MATRIX R on R.SCHEMA_TYPEID=S.SCHEMA_TYPEID
and S.DATABASETYPEID=R.DATABASETYPEID and R.ROLENAME_TYPE='_MAIN_ROLE' AND R.TENANT_ID = $V_TENANT_ID)
SELECT R.ROLETYPE_ID,R.DATABASETYPEID,R.SCHEMA_TYPEID,P.PRIVILEGEID, $V_TENANT_ID FROM
Role_matrix_list R, ACDP_PLATFORM_DB.PLATFORM_APP.Privilege_Mapping P where
PRIVILEGE in ('OWNERSHIP') and ON_TAG in (
'ALL FILE FORMATS','FUTURE FILE FORMATS',
'ALL STAGES','FUTURE STAGES',
,'ALL EXTERNAL TABLES','FUTURE EXTERNAL TABLES'
);

--------- DML ROLE


INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.Privileges_matrix(ROLETYPE_ID,DATABASETYPEID,SCHEMA_TYPEID,PRIVILEGEID, TENANT_ID)
WITH DatabaseType_list as (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DatabaseType WHERE DATABASETYPENAME=$V_DATABASETYPENAME
),
Schema_Type_list as (
SELECT S.SCHEMA_TYPEID,S.DATABASETYPEID FROM  ACDP_PLATFORM_DB.PLATFORM_APP.Schema_Type S INNER JOIN DatabaseType_list D
WHERE SchemaTypeName= $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE AND
 S.DATABASETYPEID=D.DATABASETYPEID AND TENANT_ID = $V_TENANT_ID),
Role_matrix_list as (
SELECT R.* FROM Schema_Type_list S INNER JOIN ACDP_PLATFORM_DB.PLATFORM_APP.ROLE_MATRIX R on R.SCHEMA_TYPEID=S.SCHEMA_TYPEID
and S.DATABASETYPEID=R.DATABASETYPEID and R.ROLENAME_TYPE='_DML_ROLE' AND R.TENANT_ID = $V_TENANT_ID)
SELECT R.ROLETYPE_ID,R.DATABASETYPEID,R.SCHEMA_TYPEID,P.PRIVILEGEID, $V_TENANT_ID FROM
Role_matrix_list R, ACDP_PLATFORM_DB.PLATFORM_APP.Privilege_Mapping P where
PRIVILEGE in ('USAGE') and ON_TAG in ('DATABASE','SCHEMA');

--_DML_ROLE ROLE 
INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.Privileges_matrix(ROLETYPE_ID,DATABASETYPEID,SCHEMA_TYPEID,PRIVILEGEID, TENANT_ID)
WITH DatabaseType_list as (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DatabaseType WHERE DATABASETYPENAME = $V_DATABASETYPENAME
),
Schema_Type_list as (
SELECT S.SCHEMA_TYPEID,S.DATABASETYPEID FROM  ACDP_PLATFORM_DB.PLATFORM_APP.Schema_Type S INNER JOIN DatabaseType_list D
WHERE SchemaTypeName= $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE AND
 S.DATABASETYPEID=D.DATABASETYPEID AND TENANT_ID = $V_TENANT_ID),
Role_matrix_list as (
SELECT R.* FROM Schema_Type_list S INNER JOIN ACDP_PLATFORM_DB.PLATFORM_APP.ROLE_MATRIX R on R.SCHEMA_TYPEID=S.SCHEMA_TYPEID
and S.DATABASETYPEID=R.DATABASETYPEID and R.ROLENAME_TYPE='_DML_ROLE' AND R.TENANT_ID = $V_TENANT_ID)
SELECT R.ROLETYPE_ID,R.DATABASETYPEID,R.SCHEMA_TYPEID,P.PRIVILEGEID, $V_TENANT_ID FROM
Role_matrix_list R, ACDP_PLATFORM_DB.PLATFORM_APP.Privilege_Mapping P where
PRIVILEGE in ('USAGE') and ON_TAG in ('ALL FILE FORMATS', 'FUTURE FILE FORMATS', 'ALL STAGES','FUTURE STAGES');


INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.Privileges_matrix(ROLETYPE_ID,DATABASETYPEID,SCHEMA_TYPEID,PRIVILEGEID, TENANT_ID)
WITH DatabaseType_list as (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DatabaseType WHERE DATABASETYPENAME = $V_DATABASETYPENAME
),
Schema_Type_list as (
SELECT S.SCHEMA_TYPEID,S.DATABASETYPEID FROM  ACDP_PLATFORM_DB.PLATFORM_APP.Schema_Type S INNER JOIN DatabaseType_list D
WHERE SchemaTypeName= $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE AND
 S.DATABASETYPEID=D.DATABASETYPEID AND TENANT_ID = $V_TENANT_ID),
Role_matrix_list as (
SELECT R.* FROM Schema_Type_list S INNER JOIN ACDP_PLATFORM_DB.PLATFORM_APP.ROLE_MATRIX R on R.SCHEMA_TYPEID=S.SCHEMA_TYPEID
and S.DATABASETYPEID=R.DATABASETYPEID and R.ROLENAME_TYPE='_DML_ROLE' AND R.TENANT_ID = $V_TENANT_ID)
SELECT R.ROLETYPE_ID,R.DATABASETYPEID,R.SCHEMA_TYPEID,P.PRIVILEGEID, $V_TENANT_ID FROM
Role_matrix_list R, ACDP_PLATFORM_DB.PLATFORM_APP.Privilege_Mapping P where
PRIVILEGE in ('SELECT') and ON_TAG in ('ALL EXTERNAL TABLES','FUTURE EXTERNAL TABLES');

-- READ ROLE
INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.Privileges_matrix(ROLETYPE_ID,DATABASETYPEID,SCHEMA_TYPEID,PRIVILEGEID, TENANT_ID)
WITH DatabaseType_list as (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DatabaseType WHERE DATABASETYPENAME=$V_DATABASETYPENAME
),
Schema_Type_list as (
SELECT S.SCHEMA_TYPEID,S.DATABASETYPEID FROM  ACDP_PLATFORM_DB.PLATFORM_APP.Schema_Type S INNER JOIN DatabaseType_list D
WHERE SchemaTypeName= $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE AND
 S.DATABASETYPEID=D.DATABASETYPEID AND TENANT_ID = $V_TENANT_ID),
Role_matrix_list as (
SELECT R.* FROM Schema_Type_list S INNER JOIN ACDP_PLATFORM_DB.PLATFORM_APP.ROLE_MATRIX R on R.SCHEMA_TYPEID=S.SCHEMA_TYPEID
and S.DATABASETYPEID=R.DATABASETYPEID and R.ROLENAME_TYPE='_READ_ROLE' AND R.TENANT_ID = $V_TENANT_ID)
SELECT R.ROLETYPE_ID,R.DATABASETYPEID,R.SCHEMA_TYPEID,P.PRIVILEGEID, $V_TENANT_ID FROM
Role_matrix_list R, ACDP_PLATFORM_DB.PLATFORM_APP.Privilege_Mapping P where
PRIVILEGE in ('USAGE') and ON_TAG in ('DATABASE','SCHEMA');


--READ ROLE
INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.Privileges_matrix(ROLETYPE_ID,DATABASETYPEID,SCHEMA_TYPEID,PRIVILEGEID, TENANT_ID)
WITH DatabaseType_list as (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DatabaseType WHERE DATABASETYPENAME = $V_DATABASETYPENAME
),
Schema_Type_list as (
SELECT S.SCHEMA_TYPEID,S.DATABASETYPEID FROM  ACDP_PLATFORM_DB.PLATFORM_APP.Schema_Type S INNER JOIN DatabaseType_list D
WHERE SchemaTypeName= $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE AND
 S.DATABASETYPEID=D.DATABASETYPEID AND TENANT_ID = $V_TENANT_ID),
Role_matrix_list as (
SELECT R.* FROM Schema_Type_list S INNER JOIN ACDP_PLATFORM_DB.PLATFORM_APP.ROLE_MATRIX R on R.SCHEMA_TYPEID=S.SCHEMA_TYPEID
and S.DATABASETYPEID=R.DATABASETYPEID and R.ROLENAME_TYPE='_READ_ROLE' AND R.TENANT_ID = $V_TENANT_ID)
SELECT R.ROLETYPE_ID,R.DATABASETYPEID,R.SCHEMA_TYPEID,P.PRIVILEGEID, $V_TENANT_ID FROM
Role_matrix_list R, ACDP_PLATFORM_DB.PLATFORM_APP.Privilege_Mapping P where
PRIVILEGE in ('USAGE') and ON_TAG in ('ALL FILE FORMATS', 'FUTURE FILE FORMATS', 'ALL STAGES','FUTURE STAGES');



INSERT INTO ACDP_PLATFORM_DB.PLATFORM_APP.Privileges_matrix(ROLETYPE_ID,DATABASETYPEID,SCHEMA_TYPEID,PRIVILEGEID, TENANT_ID)
WITH DatabaseType_list as (
   SELECT DATABASETYPEID FROM ACDP_PLATFORM_DB.PLATFORM_APP.DatabaseType WHERE DATABASETYPENAME = $V_DATABASETYPENAME
),
Schema_Type_list as (
SELECT S.SCHEMA_TYPEID,S.DATABASETYPEID FROM  ACDP_PLATFORM_DB.PLATFORM_APP.Schema_Type S INNER JOIN DatabaseType_list D
WHERE SchemaTypeName= $V_DATABASETYPENAME || $V_SCHEMA_OBJECT_TYPE AND
 S.DATABASETYPEID=D.DATABASETYPEID AND TENANT_ID = $V_TENANT_ID),
Role_matrix_list as (
SELECT R.* FROM Schema_Type_list S INNER JOIN ACDP_PLATFORM_DB.PLATFORM_APP.ROLE_MATRIX R on R.SCHEMA_TYPEID=S.SCHEMA_TYPEID
and S.DATABASETYPEID=R.DATABASETYPEID and R.ROLENAME_TYPE='_READ_ROLE' AND R.TENANT_ID = $V_TENANT_ID)
SELECT R.ROLETYPE_ID,R.DATABASETYPEID,R.SCHEMA_TYPEID,P.PRIVILEGEID, $V_TENANT_ID FROM
Role_matrix_list R, ACDP_PLATFORM_DB.PLATFORM_APP.Privilege_Mapping P where
PRIVILEGE in ('SELECT') and ON_TAG in ('ALL EXTERNAL TABLES','FUTURE EXTERNAL TABLES');